rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    // Tasks collection
    match /tasks/{taskId} {
      allow read: if request.auth != null && (
        resource.data.createdBy == request.auth.uid ||
        resource.data.assignee == request.auth.email
      );
      allow create: if request.auth != null;
      allow update, delete: if request.auth != null && resource.data.createdBy == request.auth.uid;
    }

    // Comments collection
    match /comments/{commentId} {
      allow read: if request.auth != null && get(/databases/$(database)/documents/tasks/$(resource.data.taskId)).data.createdBy == request.auth.uid;
      allow create: if request.auth != null && get(/databases/$(database)/documents/tasks/$(request.resource.data.taskId)).data.createdBy == request.auth.uid;
      allow delete: if request.auth != null && (
        get(/databases/$(database)/documents/tasks/$(resource.data.taskId)).data.createdBy == request.auth.uid
      );
    }

    // Users collection
    match /users/{userId} {
      allow read: if isAuthenticated();
      allow create, update: if isAuthenticated() && isOwner(userId);
      allow delete: if false;
    }
  }
} 